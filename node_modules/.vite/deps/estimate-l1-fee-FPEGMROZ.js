import {
  toSerializableTransaction
} from "./chunk-CY2A75ND.js";
import "./chunk-VCMDR2GT.js";
import {
  getContract
} from "./chunk-DWAXXZ7L.js";
import "./chunk-HIIYDCM2.js";
import {
  readContract,
  serializeTransaction
} from "./chunk-JPEQUTT6.js";
import "./chunk-P6MIN3UT.js";
import "./chunk-GI2U2JWQ.js";
import "./chunk-6I4IKEVR.js";
import "./chunk-QKPK6Z7F.js";
import "./chunk-PSDGVWRX.js";
import "./chunk-4SR4NWEX.js";
import "./chunk-GKR5KKDX.js";
import "./chunk-CJVQISD4.js";
import "./chunk-EGRHWZRV.js";
import "./chunk-MVEJMUOB.js";

// node_modules/@thirdweb-dev/sdk/node_modules/thirdweb/dist/esm/gas/estimate-l1-fee.js
var OPStackGasPriceOracleAddress = "0x420000000000000000000000000000000000000F";
async function estimateL1Fee(options) {
  const { transaction, gasPriceOracleAddress } = options;
  const oracleContract = getContract({
    client: transaction.client,
    address: gasPriceOracleAddress || OPStackGasPriceOracleAddress,
    chain: transaction.chain
  });
  const { gasPrice, ...serializableTx } = await toSerializableTransaction({
    transaction
  });
  const serialized = serializeTransaction({
    ...serializableTx,
    type: "eip1559"
  });
  return readContract({
    contract: oracleContract,
    method: "function getL1Fee(bytes memory _data) view returns (uint256)",
    params: [serialized]
  });
}
export {
  estimateL1Fee
};
//# sourceMappingURL=estimate-l1-fee-FPEGMROZ.js.map
